local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")

local flying = false
local speed = 50

-- Create UI elements
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local button = Instance.new("TextButton", screenGui)
button.Size = UDim2.new(0.2, 0, 0.1, 0)
button.Position = UDim2.new(0.4, 0, 0.9, 0)
button.Text = "Fly"
button.TextScaled = true
button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)

local joystick = Instance.new("Frame", screenGui)
joystick.Size = UDim2.new(0.2, 0, 0.2, 0)
joystick.Position = UDim2.new(0.05, 0, 0.7, 0)
joystick.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
joystick.AnchorPoint = Vector2.new(0.5, 0.5)
joystick.BackgroundTransparency = 0.5

local knob = Instance.new("Frame", joystick)
knob.Size = UDim2.new(0.3, 0, 0.3, 0)
knob.Position = UDim2.new(0.5, 0, 0.5, 0)
knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
knob.AnchorPoint = Vector2.new(0.5, 0.5)
knob.BackgroundTransparency = 0.5

local function Fly()
    local char = player.Character
    local humanoid = char:WaitForChild("Humanoid")
    local rootPart = char:WaitForChild("HumanoidRootPart")

    local bg = Instance.new("BodyGyro", rootPart)
    bg.P = 9e4
    bg.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
    bg.CFrame = rootPart.CFrame

    local bv = Instance.new("BodyVelocity", rootPart)
    bv.Velocity = Vector3.new(0, 0, 0)
    bv.MaxForce = Vector3.new(9e4, 9e4, 9e4)

    flying = true

    RS.RenderStepped:Connect(function()
        if flying then
            humanoid.PlatformStand = true

            -- Joystick Input
            local joystickPosition = joystick.AbsolutePosition
            local joystickSize = joystick.AbsoluteSize
            local knobPosition = knob.Position
            local moveDirection = (Vector2.new(UIS:GetMouseLocation().X, UIS:GetMouseLocation().Y) - joystickPosition - (joystickSize / 2)) / (joystickSize / 2)
            local direction = Vector3.new(moveDirection.X, 0, moveDirection.Y).Unit

            bv.Velocity = (workspace.CurrentCamera.CFrame.LookVector * direction.Z + workspace.CurrentCamera.CFrame.RightVector * direction.X) * speed
            bg.CFrame = workspace.CurrentCamera.CFrame
        end
    end)
end

local function ToggleFly()
    if not flying then
        Fly()
    else
        flying = false
        player.Character:WaitForChild("Humanoid").PlatformStand = false
    end
end

-- Button to toggle flying
button.MouseButton1Click:Connect(function()
    ToggleFly()
end)

-- Joystick functionality
local function updateJoystick(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        local touchPosition = input.Position
        local joystickPosition = joystick.AbsolutePosition
        local joystickSize = joystick.AbsoluteSize
        local moveDirection = (touchPosition - joystickPosition - (joystickSize / 2)) / (joystickSize / 2)
        moveDirection = Vector2.new(math.clamp(moveDirection.X, -1, 1), math.clamp(moveDirection.Y, -1, 1))
        knob.Position = UDim2.new(0.5 + moveDirection.X * 0.5, 0, 0.5 + moveDirection.Y * 0.5, 0)
    end
end

local function resetJoystick()
    knob.Position = UDim2.new(0.5, 0, 0.5, 0)
end

UIS.InputBegan:Connect(updateJoystick)
UIS.InputEnded:Connect(resetJoystick)
