local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")

local flying = false
local speed = 50

local function Fly()
    local char = player.Character
    local humanoid = char:WaitForChild("Humanoid")
    local rootPart = char:WaitForChild("HumanoidRootPart")

    local bg = Instance.new("BodyGyro", rootPart)
    bg.P = 9e4
    bg.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
    bg.CFrame = rootPart.CFrame

    local bv = Instance.new("BodyVelocity", rootPart)
    bv.Velocity = Vector3.new(0, 0, 0)
    bv.MaxForce = Vector3.new(9e4, 9e4, 9e4)

    flying = true

    RS.RenderStepped:Connect(function()
        if flying then
            humanoid.PlatformStand = true

            -- Get built-in joystick input
            local moveDirection = Vector3.new(0, 0, 0)

            local gamepadState = UIS:GetGamepadState(Enum.UserInputType.Gamepad1)
            if #gamepadState > 0 then
                local joystick = gamepadState[1]
                local moveVector = Vector2.new(joystick.Position.X, joystick.Position.Y)
                moveDirection = Vector3.new(moveVector.X, 0, moveVector.Y).Unit
            end

            bv.Velocity = (workspace.CurrentCamera.CFrame.LookVector * moveDirection.Z + workspace.CurrentCamera.CFrame.RightVector * moveDirection.X) * speed
            bg.CFrame = workspace.CurrentCamera.CFrame
        end
    end)
end

local function ToggleFly()
    if not flying then
        Fly()
    else
        flying = false
        player.Character:WaitForChild("Humanoid").PlatformStand = false
    end
end

-- Mobile Button to Toggle Flying
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local button = Instance.new("TextButton", screenGui)
button.Size = UDim2.new(0.2, 0, 0.1, 0)
button.Position = UDim2.new(0.4, 0, 0.9, 0)
button.Text = "Fly"
button.TextScaled = true
button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)

button.MouseButton1Click:Connect(function()
    ToggleFly()
end)
